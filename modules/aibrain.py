import google.generativeai as genai
from datetime import datetime, timedelta
import streamlit as st # Necesario para st.error

def generar_plan_semanal(perfil, historial_mes_str):
    """Genera la estructura de entrenamiento para 7 d√≠as con un formato estricto."""
    model = genai.GenerativeModel('gemini-1.5-flash')
    prompt = f"""
    Eres un entrenador personal de √©lite. Tu tarea es dise√±ar una estructura de entrenamiento semanal.

    **PERFIL DEL USUARIO:**
    - Objetivo: {perfil.get('Objetivo', 'No especificado')}
    - Edad: {perfil.get('Edad', 'No especificado')}
    - Lesiones/Limitaciones: {perfil.get('Lesiones/Limitaciones', 'Ninguna')}
    - Disponibilidad: {perfil.get('Disponibilidad', 'No especificada')}
    - Equipamiento: {perfil.get('Equipamiento', 'No especificado')}
    
    **HISTORIAL DEL √öLTIMO MES:**
    {historial_mes_str}

    **INSTRUCCIONES:**
    1.  **Analiza la Disponibilidad:** Dise√±a un plan que se ajuste estrictamente al n√∫mero de d√≠as disponibles. Si el usuario solo puede 3 d√≠as, el plan debe tener 3 d√≠as de entrenamiento y 4 de descanso/recuperaci√≥n.
    2.  **Considera el Equipamiento:** Los tipos de entrenamiento que sugieras deben ser realizables con el material disponible.
    3.  **Usa el Historial:** Observa el historial para asegurar variedad y una progresi√≥n l√≥gica.

    **FORMATO DE SALIDA OBLIGATORIO:**
    - Responde con EXACTAMENTE 7 l√≠neas.
    - Cada l√≠nea DEBE empezar con el nombre del d√≠a de la semana (Lunes, Martes,...), seguido de dos puntos y el plan.
    - NO incluyas saludos, introducciones o cualquier otro texto. Solo las 7 l√≠neas del plan.

    **EJEMPLO DE RESPUESTA PERFECTA (para disponibilidad de 4 d√≠as):**
    Lunes: Empuje (Pecho, Hombro, Tr√≠ceps)
    Martes: Tir√≥n (Espalda, B√≠ceps)
    Mi√©rcoles: Descanso total
    Jueves: Pierna (Cu√°driceps, Femoral)
    Viernes: Cardio y Abdominales
    S√°bado: Descanso total
    Domingo: Descanso total
    """
    try:
        response = model.generate_content(prompt)
        return response.text
    except Exception as e:
        st.error(f"Error al generar el plan semanal: {e}")
        return None

def generar_plan_diario(perfil, historial_detallado_texto, datos_hoy, plan_semanal_actual, fecha_de_registro):
    """Genera el plan detallado para ma√±ana con l√≥gica de adaptaci√≥n avanzada."""
    model = genai.GenerativeModel('gemini-1.5-flash')
    
    dias_semana = ["Lunes", "Martes", "Mi√©rcoles", "Jueves", "Viernes", "S√°bado", "Domingo"]
    fecha_manana = fecha_de_registro + timedelta(days=1)
    dia_manana_nombre = dias_semana[fecha_manana.weekday()]
    lo_que_toca_manana = plan_semanal_actual.get(f"{dia_manana_nombre}_Plan", "D√≠a libre")

    prompt = f"""
    Eres un entrenador personal adaptativo de √©lite. Tu objetivo es crear un plan DETALLADO para ma√±ana, tomando decisiones inteligentes basadas en la informaci√≥n real.

    **INFORMACI√ìN DISPONIBLE:**

    1.  **PLAN ESTRAT√âGICO SEMANAL:**
        - El plan original para la semana es: {plan_semanal_actual.get('Plan_Original_Completo', '')}
        - Seg√∫n este plan, ma√±ana ({dia_manana_nombre}) tocar√≠a: **{lo_que_toca_manana}**.

    2.  **DATOS DEL D√çA REGISTRADO ({fecha_de_registro.strftime('%A, %d de %B')}):**
        - Entrenamiento Realizado y Notas: {datos_hoy.get('entreno', 'No especificado')}
        - Sensaciones: {datos_hoy.get('sensaciones', 'No especificadas')}
        - Nutrici√≥n y Descanso: Calor√≠as={datos_hoy.get('calorias')}, Prote√≠nas={datos_hoy.get('proteinas')}, Descanso={datos_hoy.get('descanso')} horas.

    3.  **PERFIL Y CONTEXTO DEL ATLETA:**
        - Perfil (Objetivos, Lesiones, etc.): {perfil}
        - Historial Detallado de Rendimiento (Series, Reps, Pesos): {historial_detallado_texto}

    **TU PROCESO DE DECISI√ìN Y TAREAS (EN ESTE ORDEN):**

    1.  **REGLA CR√çTICA DE RECUPERACI√ìN:** Compara el entrenamiento REALIZADO hoy (`{datos_hoy.get('entreno')}`) con el planificado para ma√±ana (`{lo_que_toca_manana}`). Si los grupos musculares principales se solapan (ej: hoy hizo espalda y ma√±ana toca espalda), **DEBES MODIFICAR EL PLAN DE MA√ëANA**. Justifica el cambio de forma clara (ej: "Para asegurar una recuperaci√≥n √≥ptima..."). La salud y la recuperaci√≥n son la m√°xima prioridad.

    2.  **PLAN DE ENTRENAMIENTO DETALLADO PARA MA√ëANA:**
        - Bas√°ndote en tu decisi√≥n anterior, define el entrenamiento para ma√±ana.
        - **Aplica Sobrecarga Progresiva:** Usa el "Historial Detallado de Rendimiento" para sugerir pesos y repeticiones que supongan un reto. S√© expl√≠cito (ej: "Press Banca: 3x8 con 82.5 kg").
        - **Respeta el Equipamiento:** Los ejercicios deben ser realizables con el equipamiento del usuario (`{perfil.get('Equipamiento')}`).

    3.  **PLAN DE DIETA Y CONSEJO:** Crea el plan de dieta y el consejo del d√≠a como de costumbre.

    4.  **RE-PLANIFICACI√ìN SEMANAL (OPCIONAL):** Si el cambio realizado en el punto 1 es significativo, a√±ade al final una secci√≥n `### üîÑ Sugerencia de Re-planificaci√≥n Semanal` con una nueva estructura para los d√≠as restantes de la semana.

    **FORMATO DE SALIDA:**
    Usa el formato Markdown habitual con las secciones ### üèãÔ∏è Plan de Entrenamiento para Ma√±ana, ### ü•ó Plan de Dieta para Ma√±ana, ### üí° Consejo del D√≠a y, si es necesario, ### üîÑ Sugerencia de Re-planificaci√≥n Semanal.
    """
    try:
        response = model.generate_content(prompt)
        return response.text
    except Exception as e:
        st.error(f"Error al contactar con la IA para el plan diario: {e}")
        return None

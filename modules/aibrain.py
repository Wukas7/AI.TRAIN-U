import google.generativeai as genai
from datetime import datetime, timedelta
import streamlit as st # Necesario para st.error

def generar_plan_semana(perfil, historial_mes_str):
    """Genera la estructura de entrenamiento para 7 d√≠as con un formato estricto."""
    model = genai.GenerativeModel('gemini-1.5-flash')
    prompt = f"""
    Eres un entrenador personal de √©lite. Tu tarea es dise√±ar una estructura de entrenamiento semanal.

    **PERFIL DEL USUARIO:**
    - Objetivo: {perfil.get('Objetivo', 'No especificado')}
    - Edad: {perfil.get('Edad', 'No especificado')}
    - Lesiones/Limitaciones: {perfil.get('Lesiones/Limitaciones', 'Ninguna')}
    - Disponibilidad: {perfil.get('Disponibilidad', 'No especificada')}
    - Equipamiento: {perfil.get('Equipamiento', 'No especificado')}
    
    **HISTORIAL DEL √öLTIMO MES:**
    {historial_mes_str}

    **INSTRUCCIONES:**
    1.  **Analiza la Disponibilidad:** Dise√±a un plan que se ajuste estrictamente al n√∫mero de d√≠as disponibles. Si el usuario solo puede 3 d√≠as, el plan debe tener 3 d√≠as de entrenamiento y 4 de descanso/recuperaci√≥n.
    2.  **Considera el Equipamiento:** Los tipos de entrenamiento que sugieras deben ser realizables con el material disponible.
    3.  **Usa el Historial:** Observa el historial para asegurar variedad y una progresi√≥n l√≥gica.

    **FORMATO DE SALIDA OBLIGATORIO:**
    - Responde con EXACTAMENTE 7 l√≠neas.
    - Cada l√≠nea DEBE empezar con el nombre del d√≠a de la semana (Lunes, Martes,...), seguido de dos puntos y el plan.
    - NO incluyas saludos, introducciones o cualquier otro texto. Solo las 7 l√≠neas del plan.

    **EJEMPLO DE RESPUESTA PERFECTA (para disponibilidad de 4 d√≠as):**
    Lunes: Empuje (Pecho, Hombro, Tr√≠ceps)
    Martes: Tir√≥n (Espalda, B√≠ceps)
    Mi√©rcoles: Descanso total
    Jueves: Pierna (Cu√°driceps, Femoral)
    Viernes: Cardio y Abdominales
    S√°bado: Descanso total
    Domingo: Descanso total
    """
    try:
        response = model.generate_content(prompt)
        return response.text
    except Exception as e:
        st.error(f"Error al generar el plan semana: {e}")
        return None

def generar_plan_diario(perfil, historial_detallado_texto, datos_hoy, plan_semanal_actual, fecha_de_registro):
    """Genera el plan detallado para ma√±ana con l√≥gica de adaptaci√≥n avanzada."""
    model = genai.GenerativeModel('gemini-1.5-flash')
    
    dias_semana = ["Lunes", "Martes", "Mi√©rcoles", "Jueves", "Viernes", "S√°bado", "Domingo"]
    fecha_manana = fecha_de_registro + timedelta(days=1)
    dia_manana_nombre = dias_semana[fecha_manana.weekday()]

    
    try:
        lo_que_toca_manana = plan_semana_confirmado[plan_semana_confirmado['D√≠a'] == dia_manana_nombre]['Plan'].iloc[0]
    except (IndexError, KeyError):
        lo_que_toca_manana = "D√≠a libre"

    
    prompt = f"""
    Eres un entrenador personal de √©lite. Tu √∫nica tarea es crear un plan de entrenamiento y dieta DETALLADO para el objetivo espec√≠fico que te doy.

    **TAREA PRINCIPAL:**
    Crear un plan detallado para el siguiente objetivo de entrenamiento: **{lo_que_toca_manana}**.

    **CONTEXTO ADICIONAL PARA TU DECISI√ìN:**
    - **Perfil del Atleta:** {perfil}
    - **Rendimiento Hist√≥rico (Series, Reps, Pesos):** {historial_detallado_texto}
    - **Datos del √öltimo Entrenamiento Registrado ({fecha_de_registro.strftime('%A')}):** {datos_dia_registrado}
    
     **INSTRUCCIONES DETALLADAS:**
    1.  **Plan de Entrenamiento:** Dise√±a la sesi√≥n para **{lo_que_toca_manana}**.
        - **Aplica Sobrecarga Progresiva:** Bas√°ndote en el "Rendimiento Hist√≥rico", sugiere pesos y repeticiones expl√≠citos para progresar.
        - **Respeta el Equipamiento y las Sensaciones:** Aseg√∫rate de que los ejercicios son adecuados. Adaptate a la disponibilidad.
    2.  **Plan de Dieta:** Proporciona un plan nutricional acorde.
    3.  **Consejo del D√≠a:** Ofrece un consejo √∫til.
    4.  **RE-PLANIFICACI√ìN SEMANAL (OPCIONAL):** Si el cambio realizado en el punto 1 es significativo, a√±ade al final una secci√≥n `### üîÑ Sugerencia de Re-planificaci√≥n Semanal` con una nueva estructura para los d√≠as restantes de la semana.


    **FORMATO DE SALIDA:**
    Usa el formato Markdown habitual con las secciones:
    ### üèãÔ∏è Plan de Entrenamiento para Ma√±ana
    ### ü•ó Plan de Dieta para Ma√±ana
    ### üí° Consejo del D√≠a
    """
    try:
        response = model.generate_content(prompt)
        return response.text
    except Exception as e:
        st.error(f"Error al contactar con la IA para el plan diario: {e}")
        return None
